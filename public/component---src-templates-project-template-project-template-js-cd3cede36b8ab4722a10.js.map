{"version":3,"sources":["webpack:///./src/containers/single-project/banner/banner.stc.js","webpack:///./src/containers/single-project/banner/index.js","webpack:///./src/templates/project-template/project-template.stc.js","webpack:///./src/templates/project-template/project-template.js"],"names":["BannerWrap","styled","div","Banner","banngerImg","pagedataJson","banner_img","childImageSharp","fluid","alt","ProjectDetailsWrap","device","medium","small","xlarge","ProjectHeaderWrap","ProjectHeaderMeta","large","ProjectType","ProjectFeatureWrap","FullwidthBox","NextProjectWrap","ProjectTemplate","data","pageContext","next","previous","restProps","title","metaHeading","metaText","nextProjectStyle","projectData","projectsJson","body","features","cover_image","className","client","data-wow-delay","data-wow-duration","sector","year","map","text","i","key","classToggle","triggerElement","triggerHook","id","feature","ft","image","subtitle","isEven","featured_image","query","defaultProps","color","fontSize","lineHeight","responsive","as","fontweight","letterspacing","mb","m","mt"],"mappings":"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","file":"component---src-templates-project-template-project-template-js-cd3cede36b8ab4722a10.js","sourcesContent":["import styled from 'styled-components';\n\nexport const BannerWrap = styled.div `\n    .gatsby-image-wrapper{\n        z-index: -1;\n    }\n`;","import React from 'react';\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from '../../../components/image'\nimport {BannerWrap} from './banner.stc'\n\n\nconst Banner = () => {\n    const projectHeroQueryData = useStaticQuery(graphql `\n        query ProjectHeroDataQuery {\n            pagedataJson(id: {eq: \"single_project_page_data\"}) {\n                banner_img {\n                    childImageSharp {\n                        fluid(maxWidth: 1920, maxHeight: 750, quality: 100) {\n                            ...GatsbyImageSharpFluid_withWebp\n                            presentationWidth\n                            presentationHeight\n                        }\n                    }\n                }\n            }\n        }  \n    `);\n    const banngerImg = projectHeroQueryData.pagedataJson.banner_img.childImageSharp.fluid;\n    return(\n        <BannerWrap>\n            <Image fluid={banngerImg} alt=\"Project Banner\"/>\n        </BannerWrap>\n    )\n}\n\nexport default Banner;","import styled from 'styled-components';\nimport {device} from '../../theme'\n\nexport const BannerWrap = styled.div `\n    .gatsby-image-wrapper{\n        z-index: -1;\n    }\n`;\n\nexport const ProjectDetailsWrap = styled.div `\n    background: #f8f8f8;\n    .section-ptb-xl {\n        padding: 130px 0;\n        @media ${device.medium}{\n            padding: 70px 0;\n        }\n        @media ${device.small}{\n            padding: 10vw 0;\n        }\n    }\n    .col-2.offset-1 {\n        @media ${device.xlarge}{\n            margin-left: 20vw;\n        }\n        @media ${device.small}{\n            width: 80vw;\n            margin-left: 10vw;\n        }\n    }\n\n`;\n\nexport const ProjectHeaderWrap = styled.div `\n\n`;\n\nexport const ProjectHeaderMeta = styled.div `\n    margin-top: 80px;\n    @media ${device.large}{\n        margin-top: 100px;\n    }\n    @media ${device.small}{\n        margin-top: 5px;\n        margin-bottom: 38px;\n    }\n`;\n\nexport const ProjectType = styled.div `\n    margin-top: 30px;\n`;\n\nexport const ProjectFeatureWrap = styled.div `\n    .rn-project-meta-inner{\n        margin-top: -10px;\n    }\n    .rn-project-content {\n        margin-top: -7px;\n        margin-bottom: -18px;\n    }\n`;\n\nexport const FullwidthBox = styled.div `\n    padding-left: 80px;\n    padding-right: 80px;\n    @media ${device.xlarge}{\n        padding-left: 10vw;\n        padding-right: 10vw;\n    }\n`;\n\n\nexport const NextProjectWrap = styled.div `\n    background-color: #f8f8f8;\n    padding: 130px 0;\n    @media ${device.medium}{\n        padding: 70px 0;\n    }\n    @media ${device.small}{\n        padding: 10vw 0;\n    }\n    .col-1.offset-1{\n        @media ${device.medium}{\n            max-width: 40vw;\n            flex: 0 0 40vw;\n        }\n    }\n`;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Controller, Scene } from 'react-scrollmagic';\nimport { graphql } from \"gatsby\"\nimport SEO from '../../components/seo';\nimport Layout from '../../containers/layout/layout'\nimport Banner from '../../containers/single-project/banner'\nimport Heading from '../../components/shared/heading'\nimport Text from '../../components/shared/text'\nimport SectionTitle from '../../components/shared/section-title'\nimport Image from '../../components/image'\nimport Project from '../../components/project'\nimport {\n    ProjectDetailsWrap, \n    ProjectHeaderWrap, \n    ProjectHeaderMeta,\n    ProjectType,\n    ProjectFeatureWrap,\n    FullwidthBox,\n    NextProjectWrap} from './project-template.stc'\n\nconst ProjectTemplate = ({data, pageContext: {next, previous}, ...restProps}) => {\n    const {title, metaHeading, metaText, nextProjectStyle} = restProps;\n    const projectData = data.projectsJson;\n    const {body, features, cover_image} = projectData;\n    return (\n        <Layout>\n            <SEO title={projectData.title}/>\n            <Banner/>\n            <ProjectDetailsWrap>\n                <ProjectHeaderWrap className=\"section-ptb-xl\">\n                    <div className=\"row\">\n                        <div className=\"col-1 offset-1\">\n                            <div className=\"rn-project-meta-inner\">\n                                {projectData.title && <Heading {...title}>{projectData.title}</Heading>}\n                                <ProjectHeaderMeta>\n                                    {projectData.client && (\n                                        <ProjectType className=\"wow fadeInLeft\" data-wow-delay=\"200ms\" data-wow-duration=\"1000ms\">\n                                            <Heading {...metaHeading}>Client</Heading>\n                                            <Text {...metaText}>{projectData.client}</Text>\n                                        </ProjectType>\n                                    )}\n                                    {projectData.sector && (\n                                        <ProjectType className=\"wow fadeInLeft\" data-wow-delay=\"200ms\" data-wow-duration=\"1000ms\">\n                                            <Heading {...metaHeading}>Sector</Heading>\n                                            <Text {...metaText}>{projectData.sector}</Text>\n                                        </ProjectType>\n                                    )}\n                                    {projectData.year && (\n                                        <ProjectType className=\"wow fadeInLeft\" data-wow-delay=\"200ms\" data-wow-duration=\"1000ms\">\n                                            <Heading {...metaHeading}>Year</Heading>\n                                            <Text {...metaText}>{projectData.year}</Text>\n                                        </ProjectType>\n                                    )}\n                                </ProjectHeaderMeta>\n                            </div>\n                        </div>\n                        <div className=\"col-2 offset-1\">\n                            <div className=\"rn-project-content\">\n                                {body && body.map((text, i) => <p key={`text-${i}`}>{text}</p>)}\n                            </div>\n                        </div>\n                    </div>\n                </ProjectHeaderWrap>\n                {cover_image && (\n                    <FullwidthBox>\n                        <Controller>\n                            <Scene classToggle=\"animated\" triggerElement=\"#project-image-1\" triggerHook=\"onCenter\">\n                                <div className=\"rn_surface\" id=\"project-image-1\">\n                                    <Image fluid={cover_image.childImageSharp.fluid} alt=\"single\"/>\n                                </div>\n                            </Scene>\n                        </Controller>\n                    </FullwidthBox>\n                )}\n                {features && features.map(feature => (\n                    <div key={feature.id} className=\"project-features\">\n                        <ProjectFeatureWrap className=\"section-ptb-xl\">\n                            <div className=\"row\">\n                                <div className=\"col-1 offset-1\">\n                                    <div className=\"rn-project-meta-inner\">\n                                        <div className=\"section-title\">\n                                            <Heading {...title}>{feature.title}</Heading>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-2 offset-1\">\n                                    <div className=\"rn-project-content\">\n                                        {feature.text.map((ft, i) => <p key={`ft-${i}`}>{ft}</p>)}\n                                    </div>\n                                </div>\n                            </div>\n                        </ProjectFeatureWrap>\n                        <FullwidthBox>\n                            <Controller>\n                                <Scene classToggle=\"animated\" triggerElement={`#${feature.id}`} triggerHook=\"onCenter\">\n                                    <div className=\"rn_surface\" id={feature.id}>\n                                        <Image fluid={feature.image.childImageSharp.fluid} alt=\"single\"/>\n                                    </div>\n                                </Scene>\n                            </Controller>\n                        </FullwidthBox>\n                    </div>\n                ))}\n            </ProjectDetailsWrap>\n            <NextProjectWrap>\n                <div className=\"project-container\">\n                    <div className=\"col-1 offset-1\">\n                        <SectionTitle\n                            title={next ? \"Next Project\": \"Previous Project\"}\n                            subtitle=\"Sample the Goods\"\n                        />\n                    </div>\n\n                    <div className=\"project-wrapper\">\n                        {next && (\n                            <Project \n                                {...nextProjectStyle}\n                                isEven={true}\n                                id={next.id} \n                                image={next.featured_image.childImageSharp.fluid}\n                                title={next.title}\n                                client={next.client}\n                                sector={next.sector}\n                            />\n                        )} \n                        {!next && previous && (\n                            <Project \n                                {...nextProjectStyle}\n                                isEven={true}\n                                id={previous.id} \n                                image={previous.featured_image.childImageSharp.fluid}\n                                title={previous.title}\n                                client={previous.client}\n                                sector={previous.sector}\n                            />\n                        )}\n                    </div>\n                </div>\n            </NextProjectWrap>\n        </Layout> \n    )\n}\n\nexport const query = graphql `\n    query($id: String!){\n        projectsJson(id: {eq: $id}){\n            id\n            title\n            client\n            sector\n            year\n            body\n            cover_image {\n              childImageSharp {\n                fluid(maxWidth: 1760, maxHeight: 990, quality: 100) {\n                  ...GatsbyImageSharpFluid_withWebp\n                  presentationWidth\n                  presentationHeight\n                }\n              }\n            }\n            features {\n              id\n              title\n              text\n              image {\n                childImageSharp {\n                  fluid(maxWidth: 1920, maxHeight: 1280, quality: 100) {\n                    ...GatsbyImageSharpFluid_withWebp\n                    presentationWidth\n                    presentationHeight\n                  }\n                }\n              }\n            }\n        }\n    }\n`;\n\nProjectTemplate.propTypes = {\n    title: PropTypes.object,\n    metaHeading: PropTypes.object,\n    metaText: PropTypes.object\n}\n\nProjectTemplate.defaultProps = {\n    title: {\n        color: 'primary',\n        fontSize: '40px',\n        lineHeight: '55px',\n        responsive: {\n            medium: {\n                fontSize: '24px',\n                lineHeight: 'initial'\n            }\n        }\n    },\n    metaHeading: {\n        as: 'h6',\n        color: 'primary',\n        fontSize: '12px',\n        fontweight: 700,\n        letterspacing: '2px',\n        mb: '12px',\n    },\n    metaText: {\n        m: 0,\n        fontSize: '12px',\n        color: '#000000',\n        letterspacing: '1px',\n    },\n    nextProjectStyle: {\n        mt: '100px',\n        responsive: {\n            medium: {\n                mt: '60px'\n            }\n        }\n    }\n}\n\nexport default ProjectTemplate;"],"sourceRoot":""}