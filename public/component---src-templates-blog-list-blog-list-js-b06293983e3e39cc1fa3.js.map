{"version":3,"sources":["webpack:///./src/containers/blog/banner/index.js","webpack:///./src/templates/blog-list/blog-list.stc.js","webpack:///./src/templates/blog-list/blog-list.js","webpack:///./src/containers/blog/blog-heading/index.js","webpack:///./src/components/pagination/pagination.stc.js","webpack:///./src/components/pagination/index.js"],"names":["Banner","banner_img","pagedataJson","className","fluid","childImageSharp","alt","SectionWrap","styled","div","device","medium","small","BlogInner","query","BlogList","props","blogs","data","allMarkdownRemark","edges","pageContext","currentPage","numberOfPages","title","map","blog","i","key","node","frontmatter","date","author","path","excerpt","shortDesc","image","BlogHeading","blogSecData","subtitle","PaginationWrap","PaginationList","ul","PaginationItem","li","PaginationLink","Anchor","theme","colors","borderColor","bodyColor","active","css","primary","disabled","Pagination","isFirst","isLast","previousPage","toString","nextPage","classname","Array","from","length","_"],"mappings":"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","file":"component---src-templates-blog-list-blog-list-js-b06293983e3e39cc1fa3.js","sourcesContent":["import React from 'react'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from '../../../components/image'\n\nconst Banner = () => {\n    const BlogSecQueryData = useStaticQuery(graphql `\n        query BlogSecDataQuery {\n            pagedataJson(id: {eq: \"blog_page_data\"}) {\n                banner_img {\n                    childImageSharp {\n                        fluid(maxWidth: 1920, maxHeight: 750, quality: 100) {\n                            ...GatsbyImageSharpFluid_withWebp\n                            presentationWidth\n                            presentationHeight\n                        }\n                    }\n                }\n            }\n        }\n    `);\n    const {banner_img} = BlogSecQueryData.pagedataJson\n    return (\n        <div className=\"banner-area\">\n            <Image fluid={banner_img.childImageSharp.fluid} alt=\"Blog Banner\"/>\n        </div>\n    )\n}\n\nexport default Banner\n","import styled from 'styled-components';\r\nimport {device} from '../../theme'\r\n\r\nexport const SectionWrap = styled.div `\r\n    padding-top: 130px;\r\n    background: #f8f8f8;\r\n    @media ${device.medium}{\r\n        padding-top: 70px;\r\n    }\r\n    @media ${device.small}{\r\n        padding-top: 60px;\r\n    }\r\n`;\r\n\r\nexport const BlogInner = styled.div `\r\n    margin-top: 48px;\r\n    .blog-wrap{\r\n        margin-top: 50px;\r\n        @media ${device.small}{\r\n            margin-top: 35px;\r\n        }\r\n    }\r\n    .col-2:nth-child(odd) {\r\n        padding-right: 30px;\r\n        @media ${device.small}{\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .col-2:nth-child(even) {\r\n        padding-left: 30px;\r\n        @media ${device.small}{\r\n            padding-left: 0;\r\n        }\r\n    }\r\n`;","import React from 'react'\r\nimport {graphql} from 'gatsby'\r\nimport SEO from '../../components/seo';\r\nimport Layout from '../../containers/layout/layout'\r\nimport Banner from '../../containers/blog/banner'\r\nimport BlogHeading from '../../containers/blog/blog-heading'\r\nimport Blog from '../../components/blog'\r\nimport Pagination from '../../components/pagination'\r\nimport {SectionWrap, BlogInner} from './blog-list.stc'\r\n\r\nconst BlogList = (props) => {\r\n    const blogs = props.data.allMarkdownRemark.edges;\r\n    const {currentPage, numberOfPages} = props.pageContext;\r\n\r\n    return(\r\n        <Layout>\r\n            <SEO title={`Blog page - ${currentPage}`}/>\r\n            <Banner/>\r\n            <SectionWrap>\r\n                <BlogHeading/>\r\n                <BlogInner>\r\n                    <div className=\"col-4 offset-1\">\r\n                        <div className=\"row\">\r\n                            {blogs.map((blog, i) => (\r\n                                <div className=\"col-2 blog-wrap\" key={`blog-${i}`}>\r\n                                    <Blog\r\n                                        title={blog.node.frontmatter.title}\r\n                                        date={blog.node.frontmatter.date}\r\n                                        author={blog.node.frontmatter.author}\r\n                                        path={blog.node.frontmatter.path}\r\n                                        excerpt={blog.node.frontmatter.shortDesc}\r\n                                        image={blog.node.frontmatter.image.childImageSharp.fluid}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </BlogInner>\r\n            </SectionWrap>\r\n            <Pagination\r\n                currentPage={currentPage}\r\n                numberOfPages={numberOfPages}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const query = graphql `\r\n    query BlogListQuery($skip: Int!, $limit: Int!){\r\n        allMarkdownRemark(\r\n            sort: {fields: frontmatter___date, order: DESC}, \r\n            limit: $limit, \r\n            skip: $skip) {\r\n                edges {\r\n                    node {\r\n                      frontmatter {\r\n                        title\r\n                        path\r\n                        date(formatString: \"MMM Do, YYYY\")\r\n                        author\r\n                        shortDesc\r\n                        image {\r\n                          childImageSharp {\r\n                            fluid(maxWidth: 600, maxHeight: 630, quality: 100) {\r\n                              ...GatsbyImageSharpFluid\r\n                              presentationWidth\r\n                              presentationHeight\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport default BlogList;","import React from 'react';\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport SectionTitle from '../../../components/shared/section-title'\r\n\r\nconst BlogHeading = () => {\r\n    const blogQueryData = useStaticQuery(graphql `\r\n        query BlogHeadingQuery {\r\n            pagedataJson(id: {eq: \"blog_page_data\"}) {\r\n                title\r\n                subtitle\r\n            }\r\n        }\r\n    `);\r\n    const blogSecData = blogQueryData.pagedataJson;\r\n    return (\r\n        <div className=\"col-1 offset-1\">\r\n            <SectionTitle\r\n                subtitle={blogSecData.subtitle}\r\n                title={blogSecData.title}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogHeading;","import styled, {css} from 'styled-components';\r\nimport Anchor from '../shared/link'\r\nimport {device} from '../../theme'\r\n\r\nexport const PaginationWrap = styled.div `\r\n    position: relative;\r\n    z-index: 2;\r\n    background: #f8f8f8;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-bottom: 80px;\r\n    @media ${device.medium}{\r\n        padding-bottom: 23px;\r\n    }\r\n    @media ${device.small}{\r\n        padding-bottom: 23px;\r\n    }\r\n`;\r\n\r\nexport const PaginationList = styled.ul `\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n`;\r\n\r\nexport const PaginationItem = styled.li `\r\n    display: inline-block;\r\n    &:not(:last-child){\r\n        margin-right: 8px;\r\n    }\r\n`;\r\n\r\nexport const PaginationLink = styled(Anchor) `\r\n    display: block;\r\n    padding: 5px;\r\n    min-width: 45px;\r\n    border: 1px solid ${props => props.theme.colors.borderColor};\r\n    color: ${props => props.theme.colors.bodyColor};\r\n    text-align: center;\r\n    font-size: 16px;\r\n    ${props => props.active === 'true' && css `\r\n        background: ${props => props.theme.colors.primary};\r\n        color: #fff;\r\n        border-color: ${props => props.theme.colors.primary};  \r\n        &:visited,\r\n        &:hover,\r\n        &:active,\r\n        &:focus{\r\n            color: #fff;\r\n        }\r\n    `}\r\n    ${props => props.disabled && css `\r\n        color: #ccc;\r\n        cursor: not-allowed;\r\n    `}\r\n`;","import React from 'react';\r\nimport {PaginationWrap, PaginationList, PaginationItem, PaginationLink} from './pagination.stc'\r\n\r\nconst Pagination = ({currentPage, numberOfPages}) => {\r\n    const isFirst = currentPage === 1;\r\n    const isLast = currentPage === numberOfPages;\r\n    const previousPage = currentPage - 1 === 1 ? '/blog' : '/blog/page/' + (currentPage - 1).toString();\r\n    const nextPage = '/blog/page/' + (currentPage + 1).toString(); \r\n    return (\r\n        <PaginationWrap>\r\n            <PaginationList>\r\n                {isFirst ? (\r\n                    <PaginationItem>\r\n                        <PaginationLink disabled={true} path={previousPage}>Prev</PaginationLink>\r\n                    </PaginationItem>\r\n                ) : (\r\n                    <PaginationItem classname=\"prev\" >\r\n                        <PaginationLink path={previousPage}>Prev</PaginationLink>\r\n                    </PaginationItem>\r\n                )}\r\n                {Array.from({length: numberOfPages}, (_, i) => currentPage === i + 1 ? (\r\n                    <PaginationItem key={`page-number-${i+1}`}>\r\n                        <PaginationLink active=\"true\" path={`/blog/${i === 0 ? '' : 'page/' + (i+1) }`}>\r\n                            {i+1}\r\n                        </PaginationLink>\r\n                    </PaginationItem>\r\n                ): (\r\n                    <PaginationItem key={`page-number-${i+1}`}>\r\n                        <PaginationLink path={`/blog/${i === 0 ? '' : 'page/' + (i+1) }`}>\r\n                            {i+1}\r\n                        </PaginationLink>\r\n                    </PaginationItem> \r\n                ))}\r\n                {isLast ? (\r\n                    <PaginationItem>\r\n                        <PaginationLink disabled={true} path={nextPage}>Next</PaginationLink>\r\n                    </PaginationItem>\r\n                ): (\r\n                    <PaginationItem className=\"next\">\r\n                        <PaginationLink path={nextPage}>Next</PaginationLink>\r\n                    </PaginationItem>\r\n                )}\r\n            </PaginationList>\r\n        </PaginationWrap>\r\n    )\r\n}\r\n\r\nexport default Pagination;"],"sourceRoot":""}